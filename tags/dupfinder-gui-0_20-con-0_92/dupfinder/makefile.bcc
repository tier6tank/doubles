#
#   dupfinder - search for duplicate files
#   Copyright (C) 2007-2008 Matthias Boehm
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#

!ifndef debug
debug = 1
!endif
!ifndef unicode
unicode =1
!endif

outdir = bcc
name = dupf
namegui = dupfgui
version = 
dbgversion =
wxdir = C:\wx

!if $(unicode)==1
version = $(version)u
!endif

!if $(debug)==1
version = $(version)d
dbgversion = d
!else
!endif

outdir = $(outdir)$(version)

opt_ = -w -x -He- -H="$(outdir)\stdinc.csm" -I"$(wxdir)\include" -I"$(wxdir)\lib\bcc_lib\msw$(version)" -L$(wxdir)\lib\bcc_lib -D__WXMSW__ \
	-q -a8 -g0 -Hu -tWM

opt = $(opt_) -tWC
optgui = $(opt_) -tW

!if $(debug)==1
dbg = -D_DEBUG -DDEBUG -D__WXDEBUG__ -Od
!else
dbg = -O2 -DNDEBUG
!endif

!if $(unicode)==1
uniopt = -D_UNICODE -DUNICODE -WU -DwxUSE_UNICODE=1
!else
uniopt = 
!endif

opt = $(opt) $(dbg) $(uniopt) 

libs = wxbase28$(version).lib PSDK\shlwapi.lib wxzlib$(dbgversion).lib PSDK\user32.lib
libsgui = wxbase28$(version).lib wxmsw28$(version)_adv.lib wxmsw28$(version)_core.lib wxzlib$(dbgversion).lib PSDK\shlwapi.lib PSDK\user32.lib PSDK\gdi32.lib PSDK\comctl32.lib PSDK\comdlg32.lib PSDK\oleaut32.lib PSDK\rpcrt4.lib
headers = dbl.h largeint.h ulargeint.h os_cc_specific.h os_cc_specific_includes.h stdinc.h
headersgui = dbl.h os_cc_specific.h dupfgui.h dialog1.h dialog2.h dialog3.h

all: $(outdir) $(outdir)\$(name).exe $(outdir)\$(namegui).exe

$(outdir): 
	-@if not exist $(outdir) mkdir $(outdir)

$(outdir)\$(name).exe: $(outdir)\stdinc.obj $(outdir)\dbl.obj $(outdir)\dupf.obj $(outdir)\os_cc_specific.obj
	bcc32 $(opt) -e"$(outdir)\$(name).exe"  $** $(libs)

$(outdir)\$(namegui).exe: $(outdir)\stdinc.obj $(outdir)\os_cc_specific.obj $(outdir)\dupfgui.obj \
		$(outdir)\dialog1.obj $(outdir)\dialog2.obj $(outdir)\dialog3.obj $(outdir)\dbl.obj
	bcc32 $(optgui) -e"$(outdir)\$(namegui).exe" $** $(libsgui)

$(outdir)\dbl.obj: dbl.cpp $(headers)
	bcc32 $(opt) -o"$@" -c dbl.cpp

$(outdir)\dupf.obj: dupf.cpp $(headers)
	bcc32 $(opt) -o"$@" -c dupf.cpp

$(outdir)\os_cc_specific.obj: os_cc_specific.cpp $(headers)
	bcc32 $(opt) -c -o"$@" os_cc_specific.cpp

$(outdir)\stdinc.obj: stdinc.cpp stdinc.h os_cc_specific_includes.h
	bcc32 $(opt) -c -o"$@" -H -Hc stdinc.cpp

$(outdir)\dupfgui.obj: dupfgui.cpp $(headersgui)
	bcc32 $(opt) -c -o"$@" dupfgui.cpp

$(outdir)\dialog1.obj: dialog1.cpp $(headersgui)
	bcc32 $(opt) -c -o"$@" dialog1.cpp

$(outdir)\dialog2.obj: dialog2.cpp $(headersgui)
	bcc32 $(opt) -c -o"$@" dialog2.cpp

$(outdir)\dialog3.obj: dialog3.cpp $(headersgui)
	bcc32 $(opt) -c -o"$@" dialog3.cpp

run:
	-$(outdir)\$(name).exe
